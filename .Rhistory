options(scipen = 999)
options(scipen = 999)
library(dplyr)
library(ggplot2)
library(readxl)
library(gmodels)
library(Hmisc)
library(ggthemes)
library(ggstatsplot)
library(readr)
library(outliers)
library(car)
test <- read_csv("test.csv")
View(test)
train <- read_csv("train.csv")   #Esta dataframe tiene la variables "Exitec"
library(dplyr)
library(ggplot2)
library(ggstatsplot)
library(readr)
library(outliers)
library(car)
test <- read_csv("test.csv")
train <- read_csv("train.csv")   #Esta dataframe tiene la variables "Exitec"
str(train)
any(is.na(train))
train[!complete.cases(train),]
summary(train)
train$gender_num <- ifelse(train$Gender == "Male",1,0)
head(train$gender_num)
unique(train$Gender)
unique(train$gender_num)   #Male = 1    Female = 0
data <- train %>%
select(-"Gender")
View(data)
str(data)
mean(data$Balance)
var(data$Balance)
sd(data$Balance)
boxplot(data$Balance)
ggplot(data, aes(x = Age, y = Balance)) +
geom_point() +
labs(title = "Gráfico de Dispersión entre Gender y Balance",
x = "Age",
y = "Balance")
ggplot(data, aes(x = Age, y = Balance)) +
geom_point() +
labs(title = "Gráfico de Dispersión entre Age y Balance",
x = "Age",
y = "Balance")
grubbs.test(data$Balance)
boxplot.stats(data$Balance)$out
IQR_balance <- IQR(data$Balance)
lim_inf <- median(data$Balance)-3*IQR_balance
lim_SUP <- median(data$Balance)+3*IQR_balance
mean(data$CreditScore)
var(data$CreditScore)
sd(data$CreditScore)
boxplot(data$CreditScore)
ggplot(data, aes(x = Age, y = CreditScore)) +
geom_point() +
labs(title = "Gráfico de Dispersión entre Age y CreditScore",
x = "Age",
y = "CreditScore")
grubbs.test(data$CreditScore)
boxplot.stats(data$CreditScore)$out
IQR_creditscore <- IQR(data$CreditScore)
lim_inf <- median(data$CreditScore)-3*IQR_creditscore
lim_SUP <- median(data$CreditScore)+3*IQR_creditscore
mean(data$EstimatedSalary)
var(data$EstimatedSalary)
sd(data$EstimatedSalary)
boxplot(data$EstimatedSalary)
ggplot(data, aes(x = Age, y = EstimatedSalary)) +
geom_point() +
labs(title = "Gráfico de Dispersión entre Age y EstimatedSalary",
x = "Age",
y = "EstimatedSalary")
grubbs.test(data$EstimatedSalary)
boxplot.stats(data$EstimatedSalary)$out
IQR_estimatedsalary <- IQR(data$EstimatedSalary)
lim_inf <- median(data$EstimatedSalary)-3*IQR_estimatedsalary
lim_SUP <- median(data$EstimatedSalary)+3*IQR_estimatedsalary
data.correlacion <- data %>%
select("CreditScore","Age","Tenure","Balance","NumOfProducts","HasCrCard",
"IsActiveMember","EstimatedSalary","Exited","gender_num")
ggcorrmat(data = data.correlacion)
correlacion_matrix <- cor(data.correlacion)
correlation_df <- as.data.frame(as.table(correlacion_matrix))
colnames(correlation_df) <- c("Exited","Balance","Correlacion")
ggplot(correlation_df,aes(Exited,Balance,fill= Correlacion)) +
geom_tile() +
scale_fill_gradient(low = "black", high = "yellow") +
labs(title = "Matriz de correlacion")
hist(correlacion_matrix,main = "Histograma de Valores de Correlacion")
options(scipen = 999)
library(dplyr)
library(ggplot2)
library(readxl)
library(gmodels)
library(Hmisc)
library(ggthemes)
glimpse(data)
table(data$Geography)
data$Geography <- as.factor(data$Geography)
View(data$Geography)
#Tablas de contingencia
table(data$NumOfProducts,data$Geography)
#Proporciones
prop.table(table(data$NumOfProducts,data$Geography))
plot(prop.table(table(data$NumOfProducts,data$Geography)),
main = "Tabla de proporciones entre los productos y paises")
prop.table(table(data$NumOfProducts,data$Geography),1)
prop.table(table(data$NumOfProducts,data$Geography),2)
#CrossTable
CrossTable(data$NumOfProducts,data$Geography)
CrossTable(data$NumOfProducts,data$Geography,prop.t = F,prop.chisq = F)
CrossTable(data$Geography)
#Datos numericos
summary(data)
summary(data$Balance)
#Describe
describe(data)
#Histograma
histograma <- ggplot(data, aes(x=CreditScore)) +
ggtitle("Credito de clientes") +
theme_fivethirtyeight() +
geom_histogram(color="#28324a", fill="#3c78d8")
histograma
histograma <- ggplot(data, aes(x=Balance)) +
ggtitle("Balance de los clientes") +
theme_fivethirtyeight() +
geom_histogram(color="#28324a", fill="#3c78d8")
histograma
histograma <- ggplot(data, aes(x=EstimatedSalary)) +
ggtitle("Salario estimado de clientes") +
theme_fivethirtyeight() +
geom_histogram(color="#28324a", fill="#3c78d8")
histograma
## CORRELACIONES
library(GGally)
library(corrplot)
library(PerformanceAnalytics)
cor(data$gender_num,data$NumOfProducts)
cor.test(data$gender_num,data$NumOfProducts)
round(cor(data.correlacion),2)
rcorr(as.matrix(data.correlacion))
corrplot(correlacion,method = "number",type = "upper")
correlacion <- round(cor(data.correlacion),1)
corrplot(correlacion,method = "number",type = "upper")
summary(data)
str(data)
par(mfrow =2,3)
hist(data$Geography)
hist(data$Age)
geography_counts <- table(data$Geography)
geography_counts_df <- as.data.frame(geography_counts)
colnames(geography_counts_df) <- c("País", "Frecuencia")
View(geography_counts_df)
barplot(geography_counts_df$Frecuencia, names.arg = geography_counts_df$País,
main = "Frecuencia de Países",
xlab = "País", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(0, max(geography_counts_df$Frecuencia) + 1))
str(data)
hist(data$Age)
barplot(geography_counts_df$Frecuencia, names.arg = geography_counts_df$País,
main = "Frecuencia de Países",
xlab = "País", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(0, max(geography_counts_df$Frecuencia) + 1))
hist(data$Age)
age_counts <- table(data$Age)
age_counts_df <- as.data.frame(age_counts)
colnames(age_counts_df) <- c("Edad", "Frecuencia")
View(age_counts_df)
barplot(age_counts_df$Frecuencia, names.arg = age_counts_df$Edad,
main = "Frecuencia de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(0, max(edad_counts_df$Frecuencia) + 1))
barplot(age_counts_df$Frecuencia, names.arg = age_counts_df$Edad,
main = "Frecuencia de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(0, max(age_counts_df$Frecuencia) + 1))
hist(data$Age)
barplot(age_counts_df$Frecuencia, names.arg = age_counts_df$Edad,
main = "Frecuencia de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(0, max(age_counts_df$Frecuencia) + 1))
barplot(age_counts_df$Frecuencia, names.arg = age_counts_df$Edad,
main = "Frecuencia de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(0, max(age_counts_df$Frecuencia) + 2))
barplot(age_counts_df$Frecuencia, names.arg = age_counts_df$Edad,
main = "Frecuencia de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(0, max(age_counts_df$Frecuencia) + 5))
barplot(age_counts_df$Frecuencia, names.arg = age_counts_df$Edad,
main = "Frecuencia de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(0, max(age_counts_df$Frecuencia) + 10))
barplot(age_counts_df$Frecuencia, names.arg = age_counts_df$Edad,
main = "Frecuencia de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(0, max(age_counts_df$Frecuencia) + 1))
barplot(age_counts_df$Frecuencia, names.arg = age_counts_df$Edad,
main = "Frecuencia de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(1, max(age_counts_df$Frecuencia) + 1))
barplot(age_counts_df$Frecuencia, names.arg = age_counts_df$Edad,
main = "Frecuencia de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(0, max(age_counts_df$Frecuencia) + 1))
str(data)
hist(data$Tenure)
tenure_counts <- table(data$Tenure)
tenure_counts_df <- as.data.frame(tenure_counts)
colnames(tenure_counts_df) <- c("Tenure","Frecuencia")
barplot(tenure_counts_df$Frecuencia, names.arg = tenure_counts_df$Tenure,
main = "Frecuencia de Tenure",
xlab = "Tenure",ylab = "Frecuencia",
col = "skyblue",border = "black",ylim = c(0,max(tenure_counts_df$Frecuencia)+1))
hist(data$Tenure)
barplot(tenure_counts_df$Frecuencia, names.arg = tenure_counts_df$Tenure,
main = "Frecuencia de Tenure",
xlab = "Tenure",ylab = "Frecuencia",
col = "skyblue",border = "black",ylim = c(0,max(tenure_counts_df$Frecuencia)+1))
str(data)
unique(data$NumOfProducts)
table(data$gender_num)
hist(table(data$gender_num))
hist(table(data$NumOfProducts))
hist(data$NumOfProducts)
product_counts <- table(data$NumOfProducts)
products_counts <- table(data$NumOfProducts)
products_counts_df <- as.data.frame(tenure_counts)
colnames(products_counts_df) <- c("Productos","Frecuencia")
View(products_counts_df)
products_counts_df <- as.data.frame(products_counts)
View(products_counts_df)
colnames(products_counts_df) <- c("Productos","Frecuencia")
barplot(products_counts_df$Frecuencia, names.arg = products_counts_df$Productos,
main = "Frecuencia de Productos",
xlab = "Productos",ylab = "Frecuencia",
col = "skyblue",border = "black",ylim = c(0,max(products_counts_df$Frecuencia)+1))
str(data)
hist(data$HasCrCard)
hist(data$EstimatedSalary)
geography_counts <- table(data$Geography)
barplot(geography_counts_df$Frecuencia, names.arg = geography_counts_df$País,
main = "Frecuencia de Países",
xlab = "País", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(0, max(geography_counts_df$Frecuencia) + 1))
barplot(age_counts_df$Frecuencia, names.arg = age_counts_df$Edad,
main = "Frecuencia de Edad",
xlab = "Edad", ylab = "Frecuencia",
col = "skyblue", border = "black", ylim = c(0, max(age_counts_df$Frecuencia) + 1))
barplot(tenure_counts_df$Frecuencia, names.arg = tenure_counts_df$Tenure,
main = "Frecuencia de Tenure",
xlab = "Tenure",ylab = "Frecuencia",
col = "skyblue",border = "black",ylim = c(0,max(tenure_counts_df$Frecuencia)+1))
barplot(products_counts_df$Frecuencia, names.arg = products_counts_df$Productos,
main = "Frecuencia de Productos",
xlab = "Productos",ylab = "Frecuencia",
col = "skyblue",border = "black",ylim = c(0,max(products_counts_df$Frecuencia)+1))
set.seed(123)
mydata <- data[,c(1,2,4,5,6)]
wss <- (nrow(mydata)-1)*sum(apply(mydata,2,var))
for (i in 1:15) wss[i] <- sum(kmeans(mydata,centers = i)$withinss)
for (i in 1:15) wss[i] <- sum(kmeans(mydata,centers = i)$withinss)
data.correlacion <- data %>%
select("CreditScore","Age","Tenure","Balance","NumOfProducts","HasCrCard",
"IsActiveMember","EstimatedSalary","Exited","gender_num")
ggcorrmat(data = data.correlacion)
glimpse(data)
table(data$Geography)
data$Geography <- as.factor(data$Geography)
View(data$Geography)
